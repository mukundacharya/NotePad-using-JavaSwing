import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class np extends javax.swing.JFrame {

    /**
     * Creates new form np
     */
    public np() {
        initComponents();
        JFrame f=new JFrame();
        jTextArea1.setSize(f.getSize());
        jTextArea1.setLineWrap(true);
        setTitle("Untitled");
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newf = new javax.swing.JMenuItem();
        openf = new javax.swing.JMenuItem();
        saveas = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        newf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newf.setText("New..");
        newf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                newfMouseReleased(evt);
            }
        });
        jMenu1.add(newf);

        openf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openf.setText("Open..");
        openf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                openfMouseReleased(evt);
            }
        });
        jMenu1.add(openf);

        saveas.setText("Save As..");
        saveas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                saveasMouseReleased(evt);
            }
        });
        saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasActionPerformed(evt);
            }
        });
        jMenu1.add(saveas);

        exit.setText("Exit..");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exitMouseReleased(evt);
            }
        });
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('E');
        jMenu2.setText("Edit");

        jMenuItem6.setText("Find..");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem6MouseReleased(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem4.setText("Replace..");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem4MouseReleased(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newfMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newfMouseReleased
        // TODO add your handling code here:
        if(jTextArea1.getText().isEmpty()==true)
        {
            np a= new np();
            a.setVisible(true);
            this.setVisible(false);
            setName("Untitled");
        }
        else
        {
          int dialbut=JOptionPane.YES_NO_OPTION;
          int dialres=JOptionPane.showConfirmDialog(null, "Would you like to save the previous file?","Warning",dialbut);
          if(dialres==JOptionPane.YES_OPTION){
                try {
                String name=JOptionPane.showInputDialog(null,"Enter Path of File");
                FileOutputStream tr=new FileOutputStream(name);
                tr.write(jTextArea1.getText().getBytes());
                np a= new np();
                a.setVisible(true);
                this.setVisible(false);
                setTitle("Untitled");
                    
               } catch (FileNotFoundException ex) {
                   
               } catch (IOException ex) {
                   
               }
              }
         else
         {
         np a= new np();
         a.setVisible(true);
         this.setVisible(false);
         setName("Untitled");
          }
            }
        
    }//GEN-LAST:event_newfMouseReleased

    private void saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasActionPerformed
        
    }//GEN-LAST:event_saveasActionPerformed

    private void saveasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveasMouseReleased
       JFileChooser chooser=new JFileChooser();
       chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
       String filename=f.getAbsolutePath();
        try {
            FileWriter writer =new  FileWriter(filename);
            BufferedWriter br=new BufferedWriter(writer);
            jTextArea1.write(br);
            br.close();
            jTextArea1.requestFocus();
        } catch (IOException ex) {
           
        }
    }//GEN-LAST:event_saveasMouseReleased

    private void openfMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openfMouseReleased
       JFileChooser chooser=new JFileChooser();
       chooser.showOpenDialog(null);
       File f=chooser.getSelectedFile();
       String filename=f.getAbsolutePath();
       try
       {
           FileReader fr=new FileReader(f);
           BufferedReader br=new BufferedReader(fr);
           jTextArea1.read(br,null);
           br.close();
           jTextArea1.requestFocus();
           
       } catch (FileNotFoundException ex) {
           
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_openfMouseReleased

    private void exitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseReleased
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMouseReleased

    private void jMenuItem4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem4MouseReleased
        // TODO add your handling code here:
       String fromword=JOptionPane.showInputDialog(null,"Word which needs to be replaced");
       String toword=JOptionPane.showInputDialog(null,"Word which will replace");
       String txt=jTextArea1.getText();
       String n= txt.replaceAll(fromword, toword);
       jTextArea1.setText(n);
    }//GEN-LAST:event_jMenuItem4MouseReleased

    private void jMenuItem6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem6MouseReleased
        // TODO add your handling code here:
        String tofind=JOptionPane.showInputDialog(null,"Word to be found");
        String txt=jTextArea1.getText();
        if(txt.matches(tofind))
        {
           System.out.print("true");
        }
            
    }//GEN-LAST:event_jMenuItem6MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(np.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(np.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(np.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(np.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new np().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem newf;
    private javax.swing.JMenuItem openf;
    private javax.swing.JMenuItem saveas;
    // End of variables declaration//GEN-END:variables
}
